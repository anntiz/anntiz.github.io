<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用国内镜像安装Rust</title>
      <link href="/2025/07/30/install-rust-using-mirror/"/>
      <url>/2025/07/30/install-rust-using-mirror/</url>
      
        <content type="html"><![CDATA[<h1 id="安装Rust"><a href="#安装Rust" class="headerlink" title="安装Rust"></a>安装Rust</h1><p><code>Rustup</code> 是 <code>Rust</code> 官方的跨平台 <code>Rust</code> 安装工具。 在国内安装时，可能会出现网络问题无法安装或是安装速度非常慢，可以通过修改环境变量 <code>RUSTUP_DIST_SERVER</code> 和 <code>RUSTUP_UPDATE_ROOT</code> 来改为使用国内的镜像进行安装。</p><h1 id="设置使用国内镜像"><a href="#设置使用国内镜像" class="headerlink" title="设置使用国内镜像"></a>设置使用国内镜像</h1><p>参考：<a href="https://mirrors.ustc.edu.cn/help/rust-static.html">Rust Toolchain 反向代理使用帮助</a></p><p>使用 <code>rustup</code> 前，先设置环境变量 <code>RUSTUP_DIST_SERVER</code> （用于更新 <code>toolchain</code>）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> RUSTUP_DIST_SERVER=https://mirrors.ustc.edu.cn/rust-static</span><br></pre></td></tr></table></figure><p>以及 <code>RUSTUP_UPDATE_ROOT</code> （用于更新 <code>rustup</code>）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> RUSTUP_UPDATE_ROOT=https://mirrors.ustc.edu.cn/rust-static/rustup</span><br></pre></td></tr></table></figure><blockquote><p>第一次安装 <code>rustup</code> 的时候，如果按照官网教程 <a href="https://sh.rustup.rs/">https://sh.rustup.rs</a> 链接无法下载，可以通过 jsdelivr 下载 rustup-init.sh, 然后把脚本中的 <code>USTUP_UPDATE_ROOT</code> 变量改为 <a href="https://mirrors.ustc.edu.cn/rust-static/rustup%E3%80%82">https://mirrors.ustc.edu.cn/rust-static/rustup。</a></p></blockquote><h1 id="下载-Rustup-并安装-Rust"><a href="#下载-Rustup-并安装-Rust" class="headerlink" title="下载 Rustup 并安装 Rust"></a>下载 <code>Rustup</code> 并安装 <code>Rust</code></h1><p>要下载 <code>Rustup</code> 并安装 <code>Rust</code> , 请在终端中运行以下命令, 然后遵循屏幕上的指示。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl --proto <span class="string">&#x27;=https&#x27;</span> --tlsv1.2 -sSf https://sh.rustup.rs | sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在 <code>Rust</code> 中, <code>cargo</code> 使用国内镜像源</p><p>为应用添加依赖时, 默认的依赖安装源在 <code>crates.io</code>, 即 <code>Rust</code> 包的仓库中找到所有类别的库。</p><p>程序中引用 <code>crates</code>, 编译时需要从官方仓库中下载 <code>crates</code> 文件，但是使用官方的源有的时候很慢并且不稳定，所以使用时需要替换为国内镜像地址，目前常用的是中科大的源。</p><p>在 <code>cargo.toml</code> 文件中添加了依赖之后，运行 <code>cargo build</code> 命令时, 如果网络出现问题, 则会卡在 <code>blocking waiting for file lock on package cache lock</code> 这里。</p><h1 id="更换-cargo-的源"><a href="#更换-cargo-的源" class="headerlink" title="更换 cargo 的源"></a>更换 <code>cargo</code> 的源</h1><p>新建 <code>$HOME/.cargo/config.toml</code> 文件, 在文件中添加如下内容：</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[source.crates-io]</span></span><br><span class="line"><span class="attr">replace-with</span> = <span class="string">&#x27;ustc&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[source.ustc]</span></span><br><span class="line"><span class="attr">registry</span> = <span class="string">&quot;git://mirrors.ustc.edu.cn/crates.io-index&quot;</span></span><br></pre></td></tr></table></figure><p>如果所处的环境中不允许使用 git 协议，可以把上述地址改为：</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">registry</span> = <span class="string">&quot;https://mirrors.ustc.edu.cn/crates.io-index&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>

<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux Mint 安装后的设置</title>
      <link href="/2025/08/13/linux-mint-settings/"/>
      <url>/2025/08/13/linux-mint-settings/</url>
      
        <content type="html"><![CDATA[<h1 id="设置默认的Python"><a href="#设置默认的Python" class="headerlink" title="设置默认的Python"></a>设置默认的Python</h1><p><code>Linux Mint</code> 自带有 <code>python 3</code>, 可以将其设置为默认的 <code>Python</code> 解释器, 步骤如下：</p><ol><li>使用 <code>whereis</code> 命令查看 <code>Python</code> 安装的位置</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whereis python3</span><br></pre></td></tr></table></figure><p>命令执行结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">laohoo@laohoo-Inspiron-7559:~$ whereis python3</span><br><span class="line">python3: /usr/bin/python3 /usr/lib/python3 /etc/python3 /usr/share/python3 /usr/share/man/man1/python3.1.gz</span><br></pre></td></tr></table></figure><ol start="2"><li>使用<code>update-alternatives</code> 设置默认 <code>Python</code> 版本</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> update-alternatives --install /usr/bin/python python /usr/bin/python3 1</span><br></pre></td></tr></table></figure><h1 id="安装-Visual-Studio-Code"><a href="#安装-Visual-Studio-Code" class="headerlink" title="安装 Visual Studio Code"></a>安装 <code>Visual Studio Code</code></h1><p>从 <code>apt</code> 存储库要手动安装</p><ol><li>运行以下脚本来安装签名密钥:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install wget gpg</span><br><span class="line">wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor &gt; microsoft.gpg</span><br><span class="line"><span class="built_in">sudo</span> install -D -o root -g root -m 644 microsoft.gpg /usr/share/keyrings/microsoft.gpg</span><br><span class="line"><span class="built_in">rm</span> -f microsoft.gpg</span><br></pre></td></tr></table></figure><ol start="2"><li>创建一个<code>/etc/apt/sources.list.d/vscode.sources</code>文件, 并添加以下内容,以添加对上游包存储库的引用:</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Types: deb</span><br><span class="line">URIs: https://packages.microsoft.com/repos/code</span><br><span class="line">Suites: stable</span><br><span class="line">Components: main</span><br><span class="line">Architectures: amd64,arm64,armhf</span><br><span class="line">Signed-By: /usr/share/keyrings/microsoft.gpg</span><br></pre></td></tr></table></figure><ol start="3"><li>最后, 更新软件包缓存并安装软件包:</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install apt-transport-https</span><br><span class="line"><span class="built_in">sudo</span> apt update</span><br><span class="line"><span class="built_in">sudo</span> apt install code <span class="comment"># or code-insiders</span></span><br></pre></td></tr></table></figure><h1 id="安装-node-js"><a href="#安装-node-js" class="headerlink" title="安装 node.js"></a>安装 <code>node.js</code></h1><ol><li>删除旧版仓库配置信息</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Remove the GPG keyring file associated with the old repository</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">rm</span> /etc/apt/keyrings/nodesource.gpg</span><br><span class="line"><span class="comment"># Remove the old repository&#x27;s list file</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">rm</span> /etc/apt/sources.list.d/nodesource.list</span><br></pre></td></tr></table></figure><ol start="2"><li>初始化安装仓库</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Define the desired Node.js major version</span></span><br><span class="line">NODE_MAJOR=22</span><br><span class="line"><span class="comment"># Update local package index</span></span><br><span class="line"><span class="built_in">sudo</span> apt-get update</span><br><span class="line"><span class="comment"># Install necessary packages for downloading and verifying new repository information</span></span><br><span class="line"><span class="built_in">sudo</span> apt-get install -y ca-certificates curl gnupg</span><br><span class="line"><span class="comment"># Create a directory for the new repository&#x27;s keyring, if it doesn&#x27;t exist</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> -p /etc/apt/keyrings</span><br><span class="line"><span class="comment"># Download the new repository&#x27;s GPG key and save it in the keyring directory</span></span><br><span class="line">curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | <span class="built_in">sudo</span> gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg</span><br><span class="line"><span class="comment"># Add the new repository&#x27;s source list with its GPG key for package verification</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_<span class="variable">$&#123;NODE_MAJOR&#125;</span>.x nodistro main&quot;</span> | <span class="built_in">sudo</span> <span class="built_in">tee</span> /etc/apt/sources.list.d/nodesource.list</span><br></pre></td></tr></table></figure><ol start="3"><li>安装 <code>NOde.js</code></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Update local package index to recognize the new repository</span></span><br><span class="line"><span class="built_in">sudo</span> apt-get update</span><br><span class="line"><span class="comment"># Install Node.js from the new repository</span></span><br><span class="line"><span class="built_in">sudo</span> apt-get install -y nodejs</span><br></pre></td></tr></table></figure><ol start="4"><li>配置 <code>npm</code> 使用国内镜像</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmmirror.com</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> linux mint </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mint </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用国内镜像安装Rust</title>
      <link href="/2025/07/30/install-rust-using-mirror/"/>
      <url>/2025/07/30/install-rust-using-mirror/</url>
      
        <content type="html"><![CDATA[<h1 id="安装Rust"><a href="#安装Rust" class="headerlink" title="安装Rust"></a>安装Rust</h1><p><code>Rustup</code> 是 <code>Rust</code> 官方的跨平台 <code>Rust</code> 安装工具。 在国内安装时，可能会出现网络问题无法安装或是安装速度非常慢，可以通过修改环境变量 <code>RUSTUP_DIST_SERVER</code> 和 <code>RUSTUP_UPDATE_ROOT</code> 来改为使用国内的镜像进行安装。</p><h1 id="设置使用国内镜像"><a href="#设置使用国内镜像" class="headerlink" title="设置使用国内镜像"></a>设置使用国内镜像</h1><p>参考：<a href="https://mirrors.ustc.edu.cn/help/rust-static.html">Rust Toolchain 反向代理使用帮助</a></p><p>使用 <code>rustup</code> 前，先设置环境变量 <code>RUSTUP_DIST_SERVER</code> （用于更新 <code>toolchain</code>）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> RUSTUP_DIST_SERVER=https://mirrors.ustc.edu.cn/rust-static</span><br></pre></td></tr></table></figure><p>以及 <code>RUSTUP_UPDATE_ROOT</code> （用于更新 <code>rustup</code>）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> RUSTUP_UPDATE_ROOT=https://mirrors.ustc.edu.cn/rust-static/rustup</span><br></pre></td></tr></table></figure><blockquote><p>第一次安装 <code>rustup</code> 的时候，如果按照官网教程 <a href="https://sh.rustup.rs/">https://sh.rustup.rs</a> 链接无法下载，可以通过 jsdelivr 下载 rustup-init.sh, 然后把脚本中的 <code>USTUP_UPDATE_ROOT</code> 变量改为 <a href="https://mirrors.ustc.edu.cn/rust-static/rustup%E3%80%82">https://mirrors.ustc.edu.cn/rust-static/rustup。</a></p></blockquote><h1 id="下载-Rustup-并安装-Rust"><a href="#下载-Rustup-并安装-Rust" class="headerlink" title="下载 Rustup 并安装 Rust"></a>下载 <code>Rustup</code> 并安装 <code>Rust</code></h1><p>要下载 <code>Rustup</code> 并安装 <code>Rust</code> , 请在终端中运行以下命令, 然后遵循屏幕上的指示。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl --proto <span class="string">&#x27;=https&#x27;</span> --tlsv1.2 -sSf https://sh.rustup.rs | sh</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在 <code>Rust</code> 中, <code>cargo</code> 使用国内镜像源</p><p>为应用添加依赖时, 默认的依赖安装源在 <code>crates.io</code>, 即 <code>Rust</code> 包的仓库中找到所有类别的库。</p><p>程序中引用 <code>crates</code>, 编译时需要从官方仓库中下载 <code>crates</code> 文件，但是使用官方的源有的时候很慢并且不稳定，所以使用时需要替换为国内镜像地址，目前常用的是中科大的源。</p><p>在 <code>cargo.toml</code> 文件中添加了依赖之后，运行 <code>cargo build</code> 命令时, 如果网络出现问题, 则会卡在 <code>blocking waiting for file lock on package cache lock</code> 这里。</p><h1 id="更换-cargo-的源"><a href="#更换-cargo-的源" class="headerlink" title="更换 cargo 的源"></a>更换 <code>cargo</code> 的源</h1><p>新建 <code>$HOME/.cargo/config.toml</code> 文件, 在文件中添加如下内容：</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[source.crates-io]</span></span><br><span class="line"><span class="attr">registry</span> = <span class="string">&quot;https://github.com/rust-lang/crates.io-index&quot;</span></span><br><span class="line"><span class="attr">replace-with</span> = <span class="string">&#x27;ustc&#x27;</span>  <span class="comment"># 可选：&#x27;tuna&#x27;、&#x27;ustc&#x27;、&#x27;rustcc&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 清华大学</span></span><br><span class="line"><span class="section">[source.tuna]</span></span><br><span class="line"><span class="attr">registry</span> = <span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn/git/crates.io-index.git&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 中国科学技术大学</span></span><br><span class="line"><span class="section">[source.ustc]</span></span><br><span class="line"><span class="attr">registry</span> = <span class="string">&quot;git://mirrors.ustc.edu.cn/crates.io-index&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 上海交通大学</span></span><br><span class="line"><span class="section">[source.sjtu]</span></span><br><span class="line"><span class="attr">registry</span> = <span class="string">&quot;https://mirrors.sjtug.sjtu.edu.cn/git/crates.io-index.git&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># rustcc 社区</span></span><br><span class="line"><span class="section">[source.rustcc]</span></span><br><span class="line"><span class="attr">registry</span> = <span class="string">&quot;git://crates.rustcc.cn/crates.io-index&quot;</span></span><br></pre></td></tr></table></figure><p>如果所处的环境中不允许使用 git 协议，可以把上述地址改为：</p><figure class="highlight toml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">registry</span> = <span class="string">&quot;https://mirrors.ustc.edu.cn/crates.io-index&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> rust </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rust </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
